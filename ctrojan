#!/bin/bash
# This Script by Alkhanet (http://github.com/alkhanet26)

#-- colors --#
#R='\e[1;31m' #RED
#G='\e[1;32m' #GREEN
#B='\e[1;34m' #BLUE
#Y='\e[1;33m' #YELLOW
#C='\e[1;36m' #CYAN
W='\e[1;37m' #WHITE
##############

#-- colors v2 --#
R='\e[31;1m' #RED
G='\e[32;1m' #GREEN
Y='\e[33;1m' #YELLOW
DB='\e[34;1m' #DARKBLUE
P='\e[35;1m' #PURPLE
LB='\e[36;1m' #LIGHTBLUE

#-- colors v3 --#
BR='\e[3;31m' #RED
BG='\e[3;32m' #GREEN
BY='\e[3;33m' #YELLOW
BDB='\e[3;34m' #DARKBLUE
BP='\e[3;35m' #PURPLE
BLB='\e[3;36m' #LIGHTBLUE


  function ws(){
	#plus=$('#')
	name1=$(cat /tmp/tjn.yaml | grep trojan | cut -d: -f1| awk 'NR==1')
	address1=$(cat /tmp/tjn.yaml | grep trojan /tmp/tjn.yaml | cut -d@ -f2 | cut -d: -f1)
	port1=$(cat /tmp/tjn.yaml | grep trojan /tmp/tjn.yaml | cut -d: -f3 | cut -d/ -f1 | cut -d? -f1)
	type1=$(cat /tmp/tjn.yaml | grep trojan | cut -d: -f1| awk 'NR==1' | cut -d'-' -f1)
	password1=$(cat /tmp/tjn.yaml | grep trojan /tmp/tjn.yaml | cut -d@ -f1 | cut -d/ -f3)
	network1=$(cat /tmp/tjn.yaml | awk -F 'type=' '{print $2}' | cut -d'&' -f1 | cut -d'#' -f1)
	path1=$(cat /tmp/tjn.yaml | awk -F 'path=' '{print $2}' | sed 's+%2F+/+g' | cut -d'&' -f1 | cut -d# -f1)
	host1=$(cat /tmp/tjn.yaml | awk -F 'host=' '{print $2}' | cut -d'&' -f1)
	bug1=$(grep '=' /tmp/bugs | cut -d'=' -f2)

	printoutws(){
	echo ""
	echo -e "- name: $name1-$address1"
	echo -e "  type: $type1"
	echo -e "  server: $address1"
	echo -e "  port: $port1"
	echo -e "  password: $password1"
	echo -e "  sni: $bug1"
	echo -e "  skip-cert-verify: true"
	echo -e "  network: $network1"
	echo -e "  ws-opts:"
	echo -e "    path: $path1"
	echo -e "    headers:"
	echo -e "      Host: $address1"
	echo -e "  udp: true"
	}
	printoutws > /etc/openclash/trojan.yaml
  }

  function wsr(){
	#plus=$('#')
	name1=$(cat /tmp/tjn.yaml | grep trojan | cut -d: -f1| awk 'NR==1')
	address1=$(cat /tmp/tjn.yaml | grep trojan /tmp/tjn.yaml | cut -d@ -f2 | cut -d: -f1)
	port1=$(cat /tmp/tjn.yaml | grep trojan /tmp/tjn.yaml | cut -d: -f3 | cut -d/ -f1 | cut -d? -f1)
	type1=$(cat /tmp/tjn.yaml | grep trojan | cut -d: -f1| awk 'NR==1' | cut -d'-' -f1)
	password1=$(cat /tmp/tjn.yaml | grep trojan /tmp/tjn.yaml | cut -d@ -f1 | cut -d/ -f3)
	network1=$(cat /tmp/tjn.yaml | awk -F 'type=' '{print $2}' | cut -d'&' -f1 | cut -d'#' -f1)
	path1=$(cat /tmp/tjn.yaml | awk -F 'path=' '{print $2}' | sed 's+%2F+/+g' | cut -d'&' -f1 | cut -d# -f1)
	host1=$(cat /tmp/tjn.yaml | awk -F 'host=' '{print $2}' | cut -d'&' -f1)
	bug1=$(grep '=' /tmp/bugs | cut -d'=' -f2)

	printoutwsr(){
	echo ""
	echo -e "- name: $name1-$address1"
	echo -e "  type: $type1"
	echo -e "  server: $bug1"
	echo -e "  port: $port1"
	echo -e "  password: $password1"
	echo -e "  sni: $address1"
	echo -e "  skip-cert-verify: true"
	echo -e "  network: $network1"
	echo -e "  ws-opts:"
	echo -e "    path: $path1"
	echo -e "    headers:"
	echo -e "      Host: $address1"
	echo -e "  udp: true"
	}
	printoutwsr > /etc/openclash/trojan.yaml
  }

  function gfw(){
	#plus=$('#')
	name1=$(cat /tmp/tjn.yaml | grep trojan | cut -d: -f1| awk 'NR==1')
	address1=$(cat /tmp/tjn.yaml | grep trojan /tmp/tjn.yaml | cut -d@ -f2 | cut -d: -f1)
	port1=$(cat /tmp/tjn.yaml | grep trojan /tmp/tjn.yaml | cut -d: -f3 | cut -d/ -f1 | cut -d? -f1)
	type1=$(cat /tmp/tjn.yaml | grep trojan | cut -d: -f1| awk 'NR==1' | cut -d'-' -f1)
	password1=$(cat /tmp/tjn.yaml | grep trojan /tmp/tjn.yaml | cut -d@ -f1 | cut -d/ -f3)
	bug1=$(grep '=' /tmp/bugs | cut -d'=' -f2)


	printoutgfw(){
	echo ""
	echo -e "- name: $name1-$address1"
	echo -e "  type: $type1"
	echo -e "  server: $address1"
	echo -e "  port: $port1"
	echo -e "  password: $password1"
	echo -e "  skip-cert-verify: true"
	echo -e "  sni: $bug1"
	echo -e "  udp: true"
	}
	printoutgfw > /etc/openclash/trojan.yaml
  }

function nginput(){
	read -p "Masukan Bug provider (host/ip) : " b
	echo -e "b="$b > /tmp/bugs
	clear
	read -p "Masukan Url (ex:trojan://xxx) : " link
	echo $link > /tmp/tjn.yaml
	jenis1=$(cat /tmp/tjn.yaml | awk -F 'type=' '{print $2}' | cut -d'&' -f1 | cut -d'#' -f1)

	if [[ "$jenis1" = "ws" ]]; then		
		read -p "Reverse Mode  (y/n) : " an
		if [[ $an == "y" || $an == "Y" ]]; then
		wsr
		else
		ws
		fi
	else
	gfw
	fi
}


function ngexport(){
	read -p "Tambahkan otomatis config ke proxy_provider? (y/n) : " pp
	if [[ $pp == "y" || $pp == "Y" ]]; then
		echo ""
		echo -e "Berikut config yang ada di Proxy_provider"
		sleep 2
		echo -e "$R"
		ls /etc/openclash/proxy_provider/
		sleep 2
		echo -e "$Y"
		read -p "Masukan Nama Config di Proxy_Provider  (Contoh : alkhanet.yaml) : " nmcfg
		echo -e "Export to Proxy Provider, please wait..."
		
		resprox=$(cat /etc/openclash/proxy_provider/$nmcfg | grep -o proxies)
		if [[ $resprox == "proxies" ]]; then
		echo -e "$G"
		echo -e "Config Ditemukan!"
		else
		echo "proxies:" > /etc/openclash/proxy_provider/$nmcfg
		fi

		sleep 3
		cat /etc/openclash/trojan.yaml >> /etc/openclash/proxy_provider/$nmcfg
		sleep 1
		echo -e "$G"
		echo -e "config berhasil dimasukkan ke /etc/openclash/proxy_provider/$nmcfg"
		sleep 2
		echo -e "kembali ke halaman awal ..."
		sleep 2
		/sbin/tools
	else
	echo -e "kembali ke halaman awal ..."
	sleep 2
	/sbin/tools
	fi
}


nginput
ngexport
