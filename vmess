#!/bin/bash
# This Script by Vito Harhari (http://github.com/vitoharhari)
# Fix config clash.yaml by alkhanet (http://github.com/alkhanet26)

	function ws(){
	 name1=$(cat /tmp/cfgvms.json | grep tag | cut -d: -f2| cut -d_ -f1 | cut -d'"' -f2 | awk 'NR==2')
 	 address1=$(cat /tmp/cfgvms.json | grep address | cut -d: -f2 | cut -d'"' -f2 | awk 'NR==2')
	 port1=$(cat /tmp/cfgvms.json | grep port | cut -d: -f2 | cut -d'"' -f2 | awk 'NR==2')
	 #type1=$(cat /tmp/cfgvms.json | grep type | cut -d: -f2 | cut -d'"' -f2 | awk 'NR==1')
	 uuid1=$(cat /tmp/cfgvms.json | grep '"id":' | cut -d: -f2 | cut -d'"' -f2 | awk 'NR==1')
	 alterid1=$(cat /tmp/cfgvms.json | grep alterId | cut -d: -f2| cut -d'"' -f2 | awk 'NR==1')
	 chiper1=$(cat /tmp/cfgvms.json | grep security | cut -d: -f2| cut -d'"' -f2 | awk 'NR==1')
	 tls1=$(cat /tmp/cfgvms.json | grep security | cut -d: -f2| cut -d'"' -f2 | awk 'NR==2' | sed 's+tls+true+g' | sed 's+null,+false+g')
	 #skip1=$(cat /tmp/cfgvms.json | grep type | cut -d: -f2| cut -d'"' -f2 | awk 'NR==1')
	 #servername1=$(cat /tmp/cfgvms.json | grep type | cut -d: -f2| cut -d'"' -f2 | awk 'NR==1')
	 network1=$(cat /tmp/cfgvms.json | grep network | cut -d: -f2| cut -d'"' -f2 | awk 'NR==1')
	 path1=$(cat /tmp/cfgvms.json | grep '"path": ' | awk 'NR==1' | cut -d'"' -f4)
	 host1=$(cat /tmp/cfgvms.json | grep Host | cut -d: -f2| cut -d'"' -f2 | awk 'NR==1')
	 udp1=$(cat /tmp/cfgvms.json | grep udp | cut -d: -f2| cut -d'"' -f2 | awk 'NR==1' | sed 's+,++g' )
	 #petik=$(cat /tmp/cfgvms.json | grep -o '"' | awk 'NR==1')
	 bug1=$(grep '=' /tmp/bugs | cut -d'=' -f2)

	 printoutws(){
	 echo -e "proxies: "
	 echo -e "- name : $name1"
	 echo -e "  server: $address1"
	 echo -e "  port:$port1"
 	 echo -e "  type: vmess"
	 echo -e "  uuid: $uuid1"
	 echo -e "  alterId:$alterid1"
	 echo -e "  cipher: $chiper1"
	 echo -e "  tls: $tls1"
	 echo -e "  skip-cert-verify: true"
	 echo -e "  servername: $bug1"
	 echo -e "  network: $network1"
	 echo -e "  ws-opts:"
	 echo -e "    path: $path1"
	 echo -e "    headers:"
	 echo -e "      Host: $host1"
	 echo -e "  udp:$udp1"
	 }
	 printoutws > /etc/openclash/vmess.yaml
	 #rm /tmp/cfgvms.json
 	 /sbin/tools
	}

	function wsr(){
	 name1=$(cat /tmp/cfgvms.json | grep tag | cut -d: -f2| cut -d_ -f1 | cut -d'"' -f2 | awk 'NR==2')
 	 address1=$(cat /tmp/cfgvms.json | grep address | cut -d: -f2 | cut -d'"' -f2 | awk 'NR==2')
	 port1=$(cat /tmp/cfgvms.json | grep port | cut -d: -f2 | cut -d'"' -f2 | awk 'NR==2')
	 #type1=$(cat /tmp/cfgvms.json | grep type | cut -d: -f2 | cut -d'"' -f2 | awk 'NR==1')
	 uuid1=$(cat /tmp/cfgvms.json | grep '"id":' | cut -d: -f2 | cut -d'"' -f2 | awk 'NR==1')
	 alterid1=$(cat /tmp/cfgvms.json | grep alterId | cut -d: -f2| cut -d'"' -f2 | awk 'NR==1')
	 chiper1=$(cat /tmp/cfgvms.json | grep security | cut -d: -f2| cut -d'"' -f2 | awk 'NR==1')
	 tls1=$(cat /tmp/cfgvms.json | grep security | cut -d: -f2| cut -d'"' -f2 | awk 'NR==2' | sed 's+tls+true+g' | sed 's+null,+false+g')
	 #skip1=$(cat /tmp/cfgvms.json | grep type | cut -d: -f2| cut -d'"' -f2 | awk 'NR==1')
	 #servername1=$(cat /tmp/cfgvms.json | grep type | cut -d: -f2| cut -d'"' -f2 | awk 'NR==1')
	 network1=$(cat /tmp/cfgvms.json | grep network | cut -d: -f2| cut -d'"' -f2 | awk 'NR==1')
	 path1=$(cat /tmp/cfgvms.json | grep '"path": ' | awk 'NR==1' | cut -d'"' -f4)
	 host1=$(cat /tmp/cfgvms.json | grep Host | cut -d: -f2| cut -d'"' -f2 | awk 'NR==1')
	 udp1=$(cat /tmp/cfgvms.json | grep udp | cut -d: -f2| cut -d'"' -f2 | awk 'NR==1' | sed 's+,++g' )
	 #petik=$(cat /tmp/cfgvms.json | grep -o '"' | awk 'NR==1')
	 bug1=$(grep '=' /tmp/bugs | cut -d'=' -f2)

	 printoutwsr(){
	 echo -e "proxies: "
	 echo -e "- name : $name1"
	 echo -e "  server: $bug1"
	 echo -e "  port:$port1"
 	 echo -e "  type: vmess"
	 echo -e "  uuid: $uuid1"
	 echo -e "  alterId:$alterid1"
	 echo -e "  cipher: $chiper1"
	 echo -e "  tls: $tls1"
	 echo -e "  skip-cert-verify: true"
	 echo -e "  servername: $address1"
	 echo -e "  network: $network1"
	 echo -e "  ws-opts:"
	 echo -e "    path: $path1"
	 echo -e "    headers:"
	 echo -e "      Host: $host1"
	 echo -e "  udp:$udp1"
	 }
	 printoutwsr > /etc/openclash/vmess.yaml
	 #rm /tmp/cfgvms.json && rm /tmp/cfgvms.json
 	 /sbin/tools
	}

read -p "Masukan Bug provider (host/ip) : " b
echo -e "b="$b > /tmp/bugs
clear
read -p "Masukan Url (ex:vmess://xxx) : " link
v2ray-tools vmess2config --url $link > /tmp/cfgvms.json
jenis1=$(cat /tmp/cfgvms.json | grep "network" | cut -d: -f2 | cut -d'"' -f2| awk 'NR==1')

if [[ "$jenis1" = "ws" ]]; then
	read -p "Reverse Mode : (y/n)" an
	if [[ $an == "y" || $an == "Y" ]]; then
	wsr
	else
	ws
	fi
fi
